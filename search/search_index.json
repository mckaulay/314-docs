{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"314 Docs Class documentation for INFO 314 : \"Computer Networks And Distributed Applications\" . What is this This page is produced using MkDocs , Material Theme , and is hosted on github pages . Additionally it is both mobile and desktop friendly. Class documentation and troubleshooting will be slowly added to this website in order to better support students with their assignments. Setup your own MkDocs Curious on how to develop something similar to this? Follow instructions on how to setup your own MkDocs here .","title":"Welcome"},{"location":"#314-docs","text":"Class documentation for INFO 314 : \"Computer Networks And Distributed Applications\" .","title":"314 Docs"},{"location":"#what-is-this","text":"This page is produced using MkDocs , Material Theme , and is hosted on github pages . Additionally it is both mobile and desktop friendly. Class documentation and troubleshooting will be slowly added to this website in order to better support students with their assignments.","title":"What is this"},{"location":"#setup-your-own-mkdocs","text":"Curious on how to develop something similar to this? Follow instructions on how to setup your own MkDocs here .","title":"Setup your own MkDocs"},{"location":"assignments/","text":"Assignment Template This is the general assignment template for our quarter. For each of your assignments we expect you to follow the following format and rules below. Points may be taken off otherwise. Project #-1 Student name : first and last Formatting Formatting Use code blocks when copy pasting large amounts of terminal output or code into your markdown file. You are expected to turn in work that is formatted and readable. All Github reports and answers should be done in the repo's README.md file. Late submissions If you intend on using a late day add a comment to your submission that describes how many you wish to use. More details about late days on the Canvas syllabus. If you re-commit to your repo please re-submit on Canvas. Late commits will use your late days. Deliverables Question -1: It is recommended that you bold the questions. This makes it easier to differentiate your answer from the question. After which you can put your answer below. Question -2: Whether lab, or a project, it is required that you you copy paste the question you are answering. Doing so will ensure that you are answering all questions and accelerates the process of grading.","title":"Assignment Template"},{"location":"assignments/#assignment-template","text":"This is the general assignment template for our quarter. For each of your assignments we expect you to follow the following format and rules below. Points may be taken off otherwise.","title":"Assignment Template"},{"location":"assignments/#project-1","text":"Student name : first and last","title":"Project #-1"},{"location":"assignments/#formatting","text":"Formatting Use code blocks when copy pasting large amounts of terminal output or code into your markdown file. You are expected to turn in work that is formatted and readable. All Github reports and answers should be done in the repo's README.md file. Late submissions If you intend on using a late day add a comment to your submission that describes how many you wish to use. More details about late days on the Canvas syllabus. If you re-commit to your repo please re-submit on Canvas. Late commits will use your late days.","title":"Formatting"},{"location":"assignments/#deliverables","text":"Question -1: It is recommended that you bold the questions. This makes it easier to differentiate your answer from the question. After which you can put your answer below. Question -2: Whether lab, or a project, it is required that you you copy paste the question you are answering. Doing so will ensure that you are answering all questions and accelerates the process of grading.","title":"Deliverables"},{"location":"bash/","text":"Markdown What is Markdown \"Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML)\" source . You will be expected to use this syntax for most of your class reports. You will find a file called README.md in the root of all of your GitHub repo folders. This is where you will be doing most of your markdown work. How do I get started? Don't worry if you are unfamiliar with Markdown, it's really easy to pick up. Github has great documentation on all of the things you can do with it here: mastering-markdown guide. Once you've taken a look at it follow this beginner's tutorial: markdowntutorial.com . Additional advice When you're editing your md file in your computer, you'll want to know how your text would look like on Github as you're typing. I reccomend installing a couple extensions on VS code in order to make your life easier: Markdown Preview Github and Markdown All in One . Each has instructions at the time of installation on how to use them. Bash Bash command, terminal command, command line command, for the purpose of our class these all mean the same things. You should already be familiar with bash from INFO 201 and INFO 340. This following section will help you refresh some of the basics. Command documentation If you don't know what a command does or how to use it simply use the man command! man commandName will print out an documentation. Once you're done reading hit q on your keyboard to quit out. In the following screenshots I enter man nslookup which provides me with more information on what nslookup does and how it's used. Directories cd to change directories ls to show files and directories at your current path ls -a to also show hidden files Editing files If you are editing a file on a remote server such as your Pi, you will not have the luxury of using a nice editor such as VS Code, Atom, or Sublime. Nevertheless, there are many powerful terminal editors. Use nano or vim to edit files through your terminal. How to edit a file that's on a linux server/your Pi: Use nano fileName or vim filename Nano is beginner friendly. If you are unfamiliar with these I recommend looking up a nano tutorial. Logs Check the last 100 lines of a service's logs. This is a great way to see if it ran into any errors. sudo journcalctl -u service name If you specficially only want to see the most recent parts of the log you can pipe the information it gives you into the tail command, which only shows any files' ending lines. sudo journalctl -u service name here .service | tail -n 100 Services Control services by using the systemctl command. * Restart services: sudo systemctl restart service name * See whether a service is running or not: sudo systemctl status service name Copy files / scp You can copy files from your laptop to a server or a server to your laptop by using scp . It uses our ssh tunnel to securely transfer your files back and forth. You can find great examples at hyperx.org . Copy all of the contents of a folder: scp -r ava/* root@157.230.163.231:/var/www/html/ This copies everything in the ava folder to the html folder.","title":"Bash & Markdown"},{"location":"bash/#markdown","text":"What is Markdown \"Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML)\" source . You will be expected to use this syntax for most of your class reports. You will find a file called README.md in the root of all of your GitHub repo folders. This is where you will be doing most of your markdown work. How do I get started? Don't worry if you are unfamiliar with Markdown, it's really easy to pick up. Github has great documentation on all of the things you can do with it here: mastering-markdown guide. Once you've taken a look at it follow this beginner's tutorial: markdowntutorial.com . Additional advice When you're editing your md file in your computer, you'll want to know how your text would look like on Github as you're typing. I reccomend installing a couple extensions on VS code in order to make your life easier: Markdown Preview Github and Markdown All in One . Each has instructions at the time of installation on how to use them.","title":"Markdown"},{"location":"bash/#bash","text":"Bash command, terminal command, command line command, for the purpose of our class these all mean the same things. You should already be familiar with bash from INFO 201 and INFO 340. This following section will help you refresh some of the basics. Command documentation If you don't know what a command does or how to use it simply use the man command! man commandName will print out an documentation. Once you're done reading hit q on your keyboard to quit out. In the following screenshots I enter man nslookup which provides me with more information on what nslookup does and how it's used. Directories cd to change directories ls to show files and directories at your current path ls -a to also show hidden files Editing files If you are editing a file on a remote server such as your Pi, you will not have the luxury of using a nice editor such as VS Code, Atom, or Sublime. Nevertheless, there are many powerful terminal editors. Use nano or vim to edit files through your terminal. How to edit a file that's on a linux server/your Pi: Use nano fileName or vim filename Nano is beginner friendly. If you are unfamiliar with these I recommend looking up a nano tutorial. Logs Check the last 100 lines of a service's logs. This is a great way to see if it ran into any errors. sudo journcalctl -u service name If you specficially only want to see the most recent parts of the log you can pipe the information it gives you into the tail command, which only shows any files' ending lines. sudo journalctl -u service name here .service | tail -n 100 Services Control services by using the systemctl command. * Restart services: sudo systemctl restart service name * See whether a service is running or not: sudo systemctl status service name Copy files / scp You can copy files from your laptop to a server or a server to your laptop by using scp . It uses our ssh tunnel to securely transfer your files back and forth. You can find great examples at hyperx.org . Copy all of the contents of a folder: scp -r ava/* root@157.230.163.231:/var/www/html/ This copies everything in the ava folder to the html folder.","title":"Bash"},{"location":"contact/","text":"Asking teaching staff for help As teaching staff, both the instructor and the teaching assistant are here to help you as much as possible. We will both be available on Slack for questions. Nevertheless it is expected that you will have attempted to solve the issue as much as possible before reaching out for help. Below are some guidelines: When should I reach out? You should reach out for help if you have: Written down what your problem is Written down why you think you are seeing this behavior Completed your own debugging Completed your own research How should I ask? It is highly encourages that you ask your questions in a Slack Channel. You will get a response back much more quickly either from a student are teaching staff this way. In your message explain the problem and what you have tried so far.","title":"Asking for help"},{"location":"course-prep/core-skills-lab/","text":"This document is made to support students in Lab 1: Core skills and working with remote servers . Everything you learn in this lab is directly applicable to working with your Raspberry Pi. SSH If you are unable to SSH make sure your OS is completely up to date. What tool should I use to SSH? Mac (Unix) and Linux machines: just use your terminal WIndows: a lightweight beginner friendly tool would be Git for Windows Making new ssh keys why ssh keys? When you SSH into a server you have the option of using a password or a unique key . A clear explanation: \"Passwords are generally, predictably, unavoidably weak. While it is possible to have strong passwords, time and again it has been shown that people will use weak passwords and have poor password practices\" source With either terminal (for Mac Linux) or command line (for Windows) run the following command: ssh-keygen -t ed25519 -C YOUR_EMAIL You will be prompted for a file name for the private key. You may accept the default. You will be prompted for a passphrase . This is important as it is used to protect your private key. Do not forget this passphrase By default, your private key should be stored in your home/user directory under .ssh/id_ed25519 . This version of the key will be encrypted and protected with your passphrase. You\u2019ll also find a public key in .ssh/id_ed25519.pub . Please note that the .ssh folder is hidden, you will want to use your command line to get to it. Your public key will sit on your server, and you will use your secret private key to to prove that you are you, and securely and remotely login to your server. Specify which private key to use Format: ssh -i pathToFile user @ ip address OR hostname Example: ssh -i ~/.ssh/id_ed25519 root@157.230.163.231 Web Server There are several web servers that work straight out of the box and are super easy to use. We reccomend using nginx or apache2 . Add user : It's not safe to do all of your work as root . Root is similar to an admin, they have full access to everything. Add a new user that has less privileges by doing sudo adduser newUsername add them to the sudo group sudo usermod -aG sudo newUsername add ssh key for them: ssh-copy-id -f -i ~/.ssh/ fileName userName @ target Allow password auth * vim /etc/ssh/sshd_config * Find the PasswordAuthentication no setting and prefix it with a # comment character. Settings don\u2019t take effect automatically. Use the systemctl tool to restart the sshd service, i.e., systemctl restart sshd . Install web server sudo apt install nginx Verify that the service installed correctly by running systemctl status nginx and confirming that the nginx service is loaded and running. Copying files For instructions go to Welcome Bash commands scroll to bottom of page","title":"Core Skills Lab"},{"location":"course-prep/core-skills-lab/#ssh","text":"If you are unable to SSH make sure your OS is completely up to date. What tool should I use to SSH? Mac (Unix) and Linux machines: just use your terminal WIndows: a lightweight beginner friendly tool would be Git for Windows Making new ssh keys why ssh keys? When you SSH into a server you have the option of using a password or a unique key . A clear explanation: \"Passwords are generally, predictably, unavoidably weak. While it is possible to have strong passwords, time and again it has been shown that people will use weak passwords and have poor password practices\" source With either terminal (for Mac Linux) or command line (for Windows) run the following command: ssh-keygen -t ed25519 -C YOUR_EMAIL You will be prompted for a file name for the private key. You may accept the default. You will be prompted for a passphrase . This is important as it is used to protect your private key. Do not forget this passphrase By default, your private key should be stored in your home/user directory under .ssh/id_ed25519 . This version of the key will be encrypted and protected with your passphrase. You\u2019ll also find a public key in .ssh/id_ed25519.pub . Please note that the .ssh folder is hidden, you will want to use your command line to get to it. Your public key will sit on your server, and you will use your secret private key to to prove that you are you, and securely and remotely login to your server. Specify which private key to use Format: ssh -i pathToFile user @ ip address OR hostname Example: ssh -i ~/.ssh/id_ed25519 root@157.230.163.231","title":"SSH"},{"location":"course-prep/core-skills-lab/#web-server","text":"There are several web servers that work straight out of the box and are super easy to use. We reccomend using nginx or apache2 . Add user : It's not safe to do all of your work as root . Root is similar to an admin, they have full access to everything. Add a new user that has less privileges by doing sudo adduser newUsername add them to the sudo group sudo usermod -aG sudo newUsername add ssh key for them: ssh-copy-id -f -i ~/.ssh/ fileName userName @ target Allow password auth * vim /etc/ssh/sshd_config * Find the PasswordAuthentication no setting and prefix it with a # comment character. Settings don\u2019t take effect automatically. Use the systemctl tool to restart the sshd service, i.e., systemctl restart sshd . Install web server sudo apt install nginx Verify that the service installed correctly by running systemctl status nginx and confirming that the nginx service is loaded and running. Copying files For instructions go to Welcome Bash commands scroll to bottom of page","title":"Web Server"},{"location":"course-prep/do/","text":"As students you have access to many free services and cloud credits. One that we will be leveraging during the first week of the course is DigitalOcean, a web hosting provider. In order to be able to complete week 1 lab you will need to complete the following steps before class. source Log in with your Github account. If you haven't applied for the student developer pack do so first at the following github link. Your request should be approved within 24 hours. Once your student pack has been approved go to: https://education.github.com/pack and click \"Get your Pack\". This will re-direct you to a new page with all the offers you can claim. Scroll down to the DigitalOcean offer. Claim your $50 promo code, make sure to hold on to it. Make a new account in DigitalOcean: https://cloud.digitalocean.com/registrations/new After registration apply your promo code, then add your debit card, and verify your mail id. DigitalOcean will not charge your card unless you run out of credits. As long as you follow in class instructions you will not run out. You should now be able to see your credits in settings billing. You're good to go! On Tuesday, we will set up a server in DO and introduce you to the tools that allow you to work remotely.","title":"Digital Ocean Signup"},{"location":"course-prep/pi-materials/","text":"Buy Raspberry Pi Materials Order the required materials as soon as possible. What is a Pi? Many of the labs and exercises are built around Raspberry Pi 3 Model B/B+ hardware. The Pi is a compact, single-board computer that can be used to create a Linux-based router and other common network components. TLDR; Order the Raspberry Pi hardware. Instructions and links can be found at this Amazon link . Please only buy one of each category, don't buy duplicates, for example there is no need to buy two cases. Do not use or buy any model that is older than the 3B . Details Compute (and case) Either the Pi Model 3B or 3B+ will meet the requirements for this course. You may be able to complete the projects with an older Pi or other single-board computer. If you do run into issues later in the course, we should be able to provide you with a loaner to complete remaining assignments. Please talk to the instructor at the start of the quarter if this is your intention. Since the Pi ships as a bare circuit board, you\u2019ll want some sort of case to provide protection. The official case linked on my Amazon list runs about $7, but there are many other options as well. If you\u2019re feeling thrifty, you can even make something out of a heavy paper or other materials you already have (\u200b http://sixes.net/rdcHQ/mosh/raspberry.pi.b.plus.pdf \u200b). Power Like all computers and electronics, the Pi needs a good source of power. The specs for the power source are incredibly important. While there are plenty of USB power bricks and cables around, you need a set that will provide 5V at a minimum of 2.4A. If your equipment does not meet these specs (or you have low quality cables), you\u2019re likely to experience a lot of frustration as you work on later labs and place more demand on your Pi. We tried out all sorts of solutions in previous quarters, but the most convenient is to utilize a USB battery pack with a microUSB connector. After much searching, I came up with a couple of options that work well and can be picked up on Amazon for less than $15. Unless you understand how to verify power specifications, I recommend that you follow our recommendations. Storage The Pi has very simple storage requirements. It relies on a microSD card of the sort you would use in a digital camera or cell phone. We recommend an 8 - 16GB card that meets the Class 10 or UHS-1 speed specifications. Since prices move around a lot, I\u2019ve included several cards that I\u2019ve tested on the Amazon list. If you can afford it, a second storage card or a small USB flash drive may be useful. It\u2019s relatively easy to boot the Pi to a USB drive if you end up needing to troubleshoot a non-booting Pi without a monitor or keyboard.","title":"Pi Materials"},{"location":"course-prep/pi-materials/#buy-raspberry-pi-materials","text":"Order the required materials as soon as possible.","title":"Buy Raspberry Pi Materials"},{"location":"course-prep/pi-materials/#what-is-a-pi","text":"Many of the labs and exercises are built around Raspberry Pi 3 Model B/B+ hardware. The Pi is a compact, single-board computer that can be used to create a Linux-based router and other common network components.","title":"What is a Pi?"},{"location":"course-prep/pi-materials/#tldr","text":"Order the Raspberry Pi hardware. Instructions and links can be found at this Amazon link . Please only buy one of each category, don't buy duplicates, for example there is no need to buy two cases. Do not use or buy any model that is older than the 3B .","title":"TLDR;"},{"location":"course-prep/pi-materials/#details","text":"","title":"Details"},{"location":"course-prep/pi-materials/#compute-and-case","text":"Either the Pi Model 3B or 3B+ will meet the requirements for this course. You may be able to complete the projects with an older Pi or other single-board computer. If you do run into issues later in the course, we should be able to provide you with a loaner to complete remaining assignments. Please talk to the instructor at the start of the quarter if this is your intention. Since the Pi ships as a bare circuit board, you\u2019ll want some sort of case to provide protection. The official case linked on my Amazon list runs about $7, but there are many other options as well. If you\u2019re feeling thrifty, you can even make something out of a heavy paper or other materials you already have (\u200b http://sixes.net/rdcHQ/mosh/raspberry.pi.b.plus.pdf \u200b).","title":"Compute (and case)"},{"location":"course-prep/pi-materials/#power","text":"Like all computers and electronics, the Pi needs a good source of power. The specs for the power source are incredibly important. While there are plenty of USB power bricks and cables around, you need a set that will provide 5V at a minimum of 2.4A. If your equipment does not meet these specs (or you have low quality cables), you\u2019re likely to experience a lot of frustration as you work on later labs and place more demand on your Pi. We tried out all sorts of solutions in previous quarters, but the most convenient is to utilize a USB battery pack with a microUSB connector. After much searching, I came up with a couple of options that work well and can be picked up on Amazon for less than $15. Unless you understand how to verify power specifications, I recommend that you follow our recommendations.","title":"Power"},{"location":"course-prep/pi-materials/#storage","text":"The Pi has very simple storage requirements. It relies on a microSD card of the sort you would use in a digital camera or cell phone. We recommend an 8 - 16GB card that meets the Class 10 or UHS-1 speed specifications. Since prices move around a lot, I\u2019ve included several cards that I\u2019ve tested on the Amazon list. If you can afford it, a second storage card or a small USB flash drive may be useful. It\u2019s relatively easy to boot the Pi to a USB drive if you end up needing to troubleshoot a non-booting Pi without a monitor or keyboard.","title":"Storage"},{"location":"course-prep/wireshark-install/","text":"source . Install Wireshark using the instructions linked below and attempt to run a packet capture over your current wireless connection: Instructions (macOS): https://www.wireshark.org/docs/wsug_html_chunked/ChBuildInstallOSXInstall.html Instructions (Windows): https://www.wireshark.org/docs/wsug_html_chunked/ChBuildInstallWinInstall.html Instructions (Linux): https://www.wireshark.org/docs/wsug_html_chunked/ChBuildInstallUnixInstallBins.html","title":"Install Wireshark"},{"location":"trouble/basics/","text":"This section of 314 Docs serves as an additional resource for troubleshooting steps when working with your Pi. You will find basic steps on this page. In the menu can be found additional advice organized by major topics covered this quarter. Basic commands Remove SSH fingerprint warning: ssh-keygen -R hostName .local Turn off Pi: \u200bsudo poweroff Reboot Pi: \u200b sudo reboot now Bricked Pi You were previously able to SSH into your Pi but are no longer able to. Option 1 : Use IPv6 instead of host name to SSH in. Find IPv6 address of Pi from a Macbook or an iMac in the TE lab: dns-sd -G v4v6 hostName .local \\ Example of output 13:05:31.382 Add 3 20 raspberrypi.local. FE80:0000:0000:0000:93D4:40CB:123C:B684%en10 120 Then SSH into it using ipv6 ssh pi@ IPV6 %eth0 We're trying to avoid mDNS . Option 2 \\ Connect pi to a monitor using the HDMI port, and plug in a keyboard and mouse. You should be able to navigate to the appropriate files to fix any issues. You can find all of the necessary equipment in the TE lab. Services Control services by using the systemctl command. Restart services: sudo systemctl restart service name See whether a service is running or not: sudo systemctl status service name Logs Service logs Check the last 100 lines of a service's logs. This is a great way to see if a service ran into any errors. sudo journcalctl -u service name If you specficially only want to see the most recent parts of the log you can pipe the information it gives you into the tail command, which only shows any files' ending lines. sudo journalctl -u service name here .service | tail -n 100 Check base logs Use nano or preferably do vim on any of these and then SHIFT-G to get to end of file /var/log/syslog /var/log/messages /var/log/kern.log","title":"General"},{"location":"trouble/basics/#basic-commands","text":"Remove SSH fingerprint warning: ssh-keygen -R hostName .local Turn off Pi: \u200bsudo poweroff Reboot Pi: \u200b sudo reboot now","title":"Basic commands"},{"location":"trouble/basics/#bricked-pi","text":"You were previously able to SSH into your Pi but are no longer able to. Option 1 : Use IPv6 instead of host name to SSH in. Find IPv6 address of Pi from a Macbook or an iMac in the TE lab: dns-sd -G v4v6 hostName .local \\ Example of output 13:05:31.382 Add 3 20 raspberrypi.local. FE80:0000:0000:0000:93D4:40CB:123C:B684%en10 120 Then SSH into it using ipv6 ssh pi@ IPV6 %eth0 We're trying to avoid mDNS . Option 2 \\ Connect pi to a monitor using the HDMI port, and plug in a keyboard and mouse. You should be able to navigate to the appropriate files to fix any issues. You can find all of the necessary equipment in the TE lab.","title":"Bricked Pi"},{"location":"trouble/basics/#services","text":"Control services by using the systemctl command. Restart services: sudo systemctl restart service name See whether a service is running or not: sudo systemctl status service name","title":"Services"},{"location":"trouble/basics/#logs","text":"Service logs Check the last 100 lines of a service's logs. This is a great way to see if a service ran into any errors. sudo journcalctl -u service name If you specficially only want to see the most recent parts of the log you can pipe the information it gives you into the tail command, which only shows any files' ending lines. sudo journalctl -u service name here .service | tail -n 100 Check base logs Use nano or preferably do vim on any of these and then SHIFT-G to get to end of file /var/log/syslog /var/log/messages /var/log/kern.log","title":"Logs"},{"location":"trouble/dhcp/","text":"Troubleshoot Check DHCP errors journalctl -u isc-dhcp-server check subnet range in dhcpd.conf Check what wifi your pi is using the appropriate wifi wpa_cli -i wlan0 status Make sure both dhcpd and systemd are declaring the same statis IP for the Pi. Check your leases in at /var/lib/dhcp/dhcpd.leases To add When and how to renew DHCP leases on laptop for windows, unix, and linux","title":"DHCP / dhcpd"},{"location":"trouble/dhcp/#troubleshoot","text":"Check DHCP errors journalctl -u isc-dhcp-server check subnet range in dhcpd.conf Check what wifi your pi is using the appropriate wifi wpa_cli -i wlan0 status Make sure both dhcpd and systemd are declaring the same statis IP for the Pi. Check your leases in at /var/lib/dhcp/dhcpd.leases","title":"Troubleshoot"},{"location":"trouble/dhcp/#to-add","text":"When and how to renew DHCP leases on laptop for windows, unix, and linux","title":"To add"},{"location":"trouble/dns/","text":"Most of our work is done in: /etc/bind/zones/ Troubleshoot systemctl status bind9 and check whether the server is up named-checkconf -z within /etc/bind and make sure you are clear of general configuration errors named-checkzone subdomain.domain.com /etc/bind/zones/db.subdomain.domain.com make sure your zone file is correct add 127.0.0.1 to your listen on for /etc/bind/named.conf.options dig @127.0.0.1 mx mail.domain.pi to see if the you can resolve your own name server from the pi named.conf.options have a listen-on for the right IP? allow-query for the right hosts dhcpd.conf have the right domain name and the right domain-name-servers named.conf.local pulling in the right file To add Clear DNS cache on laptop for all three ifconfig release and renew","title":"DNS / bind9"},{"location":"trouble/dns/#troubleshoot","text":"systemctl status bind9 and check whether the server is up named-checkconf -z within /etc/bind and make sure you are clear of general configuration errors named-checkzone subdomain.domain.com /etc/bind/zones/db.subdomain.domain.com make sure your zone file is correct add 127.0.0.1 to your listen on for /etc/bind/named.conf.options dig @127.0.0.1 mx mail.domain.pi to see if the you can resolve your own name server from the pi named.conf.options have a listen-on for the right IP? allow-query for the right hosts dhcpd.conf have the right domain name and the right domain-name-servers named.conf.local pulling in the right file","title":"Troubleshoot"},{"location":"trouble/dns/#to-add","text":"Clear DNS cache on laptop for all three ifconfig release and renew","title":"To add"},{"location":"trouble/final/","text":"By the time you have arrived to the final project, debugging will involve narrowing down at what stage something is failing at, and then investigating that specific tool No Internet ifconfig , are you assigning your Pi the correct new address, make sure it's not your network address.","title":"Final Project"},{"location":"trouble/final/#no-internet","text":"ifconfig , are you assigning your Pi the correct new address, make sure it's not your network address.","title":"No Internet"},{"location":"trouble/interfaces/","text":"systemd-networkd Static IP for your PI: go to the /etc/systemd/network/20-eth0.network [Match] # We only want to match the eth0 interface Name=eth0 # Provide full address config in abbreviated notation [Network] Address=192.168.69.1/26 # Enable link local addresses for IPv6 (FE80::) LinkLocalAddressing=ipv6 Check if networkd is running: sudo service systemd-networkd status .","title":"Interfaces / systemd"},{"location":"trouble/interfaces/#systemd-networkd","text":"Static IP for your PI: go to the /etc/systemd/network/20-eth0.network [Match] # We only want to match the eth0 interface Name=eth0 # Provide full address config in abbreviated notation [Network] Address=192.168.69.1/26 # Enable link local addresses for IPv6 (FE80::) LinkLocalAddressing=ipv6 Check if networkd is running: sudo service systemd-networkd status .","title":"systemd-networkd"},{"location":"trouble/nat/","text":"","title":"NAT / iptables"}]}